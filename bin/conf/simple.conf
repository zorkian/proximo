# simple configuration file for Proximo
#
# proximo operates on the concept of setting up the two independent halves
# of a proxy system separately.
#
# this is easily thought of as picturing the clients (web servers, etc) that
# will be issuing commands as the first part, and the backend servers that
# are responsible for responding to commands as the second part.
#
# this proxy is presently designed for MySQL, so we will be approaching this
# from that angle.
#
# the clients are TCP connections that connect in and send commands.
# the backends are MySQL server machines.
#
# we assume that the MySQL backends will be configured into a cluster of
# some sort.  a cluster doesn't necessarily have to be more than one machine,
# it's just a way to logically think about what the machines do.

# global configs
query_log logs/query.log

# here we define the cluster for this test.  this cluster contains only a
# single database, we send all traffic to it.
create mysql cluster mycluster
  setup      = master-slave
  masters    = 127.0.0.1:3306
  slaves     = 127.0.0.1:3306

# everything operates on the concept of services that you create to do stuff
# so first we create a simple proxy, set the mode, where it listens, and
# the destination that stuff gets sent to
create mysql service myproxy
  listen     = 127.0.0.1:2306

  # now define where we're sending incoming connections, note that we have to
  # know the username and password of where to send it because of the way
  # MySQL does authentication
  proxy_to   = mycluster
  proxy_user = test
  proxy_pass = test
  
  # set client authentication values
  #client_user = test
  #client_pass = whatever
enable myproxy

# and now we setup the management port, which enables us to log in from
# somewhere and do interesting statistics on what is going on in the Proximo
# system at this time
create management service mgmt
  listen = 127.0.0.1:2206
enable mgmt

# that's it, that is all you need for a very simple proxy that sits in the
# middle and watches the requests going through.  this isn't very cool at
# this point, but you could imagine what would happen if you stuck a plugin
# in here and had it do something with the traffic going through.